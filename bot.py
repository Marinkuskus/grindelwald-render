import threading
from flask import Flask
from waitress import serve

app = Flask(__name__)

@app.route('/')
def home():
    return "Grindelwald bot active."

def run_web():
    serve(app, host='0.0.0.0', port=8080)

threading.Thread(target=run_web).start()


import discord
from discord.ext import commands
from discord import app_commands
import os
import asyncio
from datetime import datetime, timedelta

TOKEN = os.getenv("DISCORD_TOKEN")

GUILD_ID = 1384588296222412851
FAMILY_ROLE_ID = 1324378367176212593
ALLY_ROLE_ID = 1328274975735549953
VERIFY_CHANNEL_ID = 1384588296222412851
LOG_CHANNEL_ID = 1386258700670472232
PANTEON_ROLE_ID = 1386249039473017022

intents = discord.Intents.default()
intents.message_content = True
intents.members = True

bot = commands.Bot(command_prefix="!", intents=intents)

user_data = {}  # user_id: {'os': 0, 'rank': 1}
contract_status = {}  # contract_name: {'cooldown_until': datetime, 'last_executor': user_id}

available_contracts = [
    "üì¶ –î–∞—Ä—ã –º–æ—Ä—è",
    "üí£ –ú–µ—Ç–∞–ª–ª—É—Ä–≥–∏—è"
]

pending_confirmations = {}  # message_id: {'executor': id, 'helper': id, 'contract': str}

@bot.event
async def on_ready():
    try:
        await bot.tree.sync()
        print("‚úÖ –ö–æ–º–∞–Ω–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –≥–ª–æ–±–∞–ª—å–Ω–æ")
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:", e)
    print(f"ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot.user}")

@bot.tree.command(name="–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è", description="–ü—Ä–æ–π—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –≤—Å—Ç—É–ø–∏—Ç—å –≤ —Å–µ–º—å—é")
@app_commands.checks.has_permissions(send_messages=True)
async def verify(interaction: discord.Interaction):
    if interaction.channel.id != VERIFY_CHANNEL_ID:
        await interaction.response.send_message("‚ùå –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
        return
    await interaction.response.send_message("üì© –ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ–∏ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.", ephemeral=True)

    try:
        await interaction.user.send("‚ùî *–ö–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ —Å–µ–º—å–∏, –∫–æ—Ç–æ—Ä–æ–µ —Ç–µ–±–µ –Ω–∞–∑–≤–∞–ª–∏ –ø—Ä–∏ –∏–Ω–≤–∞–π—Ç–µ?*")

        def check(m):
            return m.author == interaction.user and isinstance(m.channel, discord.DMChannel)

        msg = await bot.wait_for("message", check=check, timeout=120)

        guild = interaction.guild
        member = guild.get_member(interaction.user.id)
        if not member:
            return

        if msg.content.strip().lower() == "–≤—ã—Å—à–µ–µ –±–ª–∞–≥–æ":
            await member.add_roles(guild.get_role(FAMILY_ROLE_ID))
            await member.send("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–µ–º—å—é.")
        else:
            await member.add_roles(guild.get_role(ALLY_ROLE_ID))
            await member.send("‚ö†Ô∏è –û—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–µ–Ω. –¢—ã –ø–æ–ª—É—á–∞–µ—à—å —Ä–æ–ª—å —Å–æ—é–∑–Ω–∏–∫–∞.")
    except Exception as e:
        await interaction.user.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏.")
        print(e)

@bot.tree.command(name="–≤–∑—è—Ç—å_–∫–æ–Ω—Ç—Ä–∞–∫—Ç", description="–í—ã–±—Ä–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç –∏–∑ —Å–ø–∏—Å–∫–∞")
@app_commands.describe(–Ω–∞–∑–≤–∞–Ω–∏–µ="–ö–æ–Ω—Ç—Ä–∞–∫—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è")
async def –≤–∑—è—Ç—å_–∫–æ–Ω—Ç—Ä–∞–∫—Ç(interaction: discord.Interaction, –Ω–∞–∑–≤–∞–Ω–∏–µ: str):
    cooldown = contract_status.get(–Ω–∞–∑–≤–∞–Ω–∏–µ, {}).get("cooldown_until")
    now = datetime.utcnow()

    if cooldown and now < cooldown:
        left = cooldown - now
        mins = int(left.total_seconds() // 60)
        await interaction.response.send_message(f"‚ùå –ö–æ–Ω—Ç—Ä–∞–∫—Ç '{–Ω–∞–∑–≤–∞–Ω–∏–µ}' –Ω–∞ –∫—É–ª–¥–∞—É–Ω–µ. –ü–æ–¥–æ–∂–¥–∏ {mins} –º–∏–Ω.", ephemeral=True)
        return

    contract_status[–Ω–∞–∑–≤–∞–Ω–∏–µ] = {"cooldown_until": None, "last_executor": None}
    await interaction.response.send_message(f"üìù –ö–æ–Ω—Ç—Ä–∞–∫—Ç **{–Ω–∞–∑–≤–∞–Ω–∏–µ}** –∑–∞–∫—Ä–µ–ø–ª—ë–Ω –∑–∞ —Ç–æ–±–æ–π. –ù–µ –∑–∞–±—É–¥—å —Å–¥–∞—Ç—å –µ–≥–æ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.")

    log_channel = bot.get_channel(LOG_CHANNEL_ID)
    if log_channel:
        await log_channel.send(f"üìå {interaction.user.mention} –≤–∑—è–ª –∫–æ–Ω—Ç—Ä–∞–∫—Ç: **{–Ω–∞–∑–≤–∞–Ω–∏–µ}**")

@–≤–∑—è—Ç—å_–∫–æ–Ω—Ç—Ä–∞–∫—Ç.autocomplete("–Ω–∞–∑–≤–∞–Ω–∏–µ")
async def –∫–æ–Ω—Ç—Ä–∞–∫—Ç_autocomplete(interaction: discord.Interaction, current: str):
    now = datetime.utcnow()
    return [
        app_commands.Choice(name=c, value=c)
        for c in available_contracts
        if c.lower().startswith(current.lower())
        and (c not in contract_status or not contract_status[c].get("cooldown_until") or contract_status[c]["cooldown_until"] < now)
    ]

@bot.tree.command(name="—Å–¥–∞—Ç—å_–∫–æ–Ω—Ç—Ä–∞–∫—Ç", description="–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É —Å–¥–∞—á–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞")
@app_commands.describe(–∫–æ–Ω—Ç—Ä–∞–∫—Ç="–ö–æ–Ω—Ç—Ä–∞–∫—Ç", –ø–æ–º–æ—â–Ω–∏–∫1="–ö—Ç–æ –ø–æ–º–æ–≥–∞–ª (1)", –ø–æ–º–æ—â–Ω–∏–∫2="–ö—Ç–æ –ø–æ–º–æ–≥–∞–ª (2)", –ø–æ–º–æ—â–Ω–∏–∫3="–ö—Ç–æ –ø–æ–º–æ–≥–∞–ª (3)")
async def —Å–¥–∞—Ç—å_–∫–æ–Ω—Ç—Ä–∞–∫—Ç(interaction: discord.Interaction, –∫–æ–Ω—Ç—Ä–∞–∫—Ç: str, –ø–æ–º–æ—â–Ω–∏–∫1: discord.Member = None, –ø–æ–º–æ—â–Ω–∏–∫2: discord.Member = None, –ø–æ–º–æ—â–Ω–∏–∫3: discord.Member = None):
    await interaction.response.send_message("üì® –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –ü–∞–Ω—Ç–µ–æ–Ω–∞.", ephemeral=True)

    embed = discord.Embed(title="üìú –ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞", color=0x888888)
    embed.add_field(name="–ö–æ–Ω—Ç—Ä–∞–∫—Ç", value=–∫–æ–Ω—Ç—Ä–∞–∫—Ç, inline=False)
    embed.add_field(name="–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å", value=interaction.user.mention, inline=False)

    helpers = [–ø–æ–º–æ—â–Ω–∏–∫1, –ø–æ–º–æ—â–Ω–∏–∫2, –ø–æ–º–æ—â–Ω–∏–∫3]
    helper_mentions = [m.mention for m in helpers if m]
    helper_ids = [m.id for m in helpers if m]

    embed.add_field(name="–ü–æ–º–æ—â–Ω–∏–∫–∏", value="
".join(helper_mentions) if helper_mentions else "‚Äî", inline=False)
    embed.set_footer(text="–û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ü–∞–Ω—Ç–µ–æ–Ω–æ–º")

    view = ConfirmView(interaction.user.id, helper_ids, –∫–æ–Ω—Ç—Ä–∞–∫—Ç)
    log_channel = bot.get_channel(LOG_CHANNEL_ID)
    if log_channel:
        msg = await log_channel.send(content=f"<@&{PANTEON_ROLE_ID}> —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞!", embed=embed, view=view)
        pending_confirmations[msg.id] = {
            "executor": interaction.user.id,
            "helpers": helper_ids,
            "contract": –∫–æ–Ω—Ç—Ä–∞–∫—Ç
        }

class ConfirmView(discord.ui.View):
    def __init__(self, executor_id, helper_ids, contract_name):
        super().__init__(timeout=None)
        self.executor_id = executor_id
        self.helper_ids = helper_ids
        self.contract_name = contract_name

    @discord.ui.button(label="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", style=discord.ButtonStyle.success)
    async def confirm(self, interaction: discord.Interaction, button: discord.ui.Button):
        info = pending_confirmations.pop(interaction.message.id, None)
        if not info:
            await interaction.response.send_message("‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.", ephemeral=True)
            return

        now = datetime.utcnow()
        contract_status[info["contract"]] = {
            "cooldown_until": now + timedelta(hours=24),
            "last_executor": info["executor"]
        }

        user_data.setdefault(info["executor"], {'os': 0, 'rank': 1})
        user_data[info["executor"]]['os'] += 15

        for helper_id in info["helpers"]:
            user_data.setdefault(helper_id, {'os': 0, 'rank': 1})
            user_data[helper_id]['os'] += 10
            user_data.setdefault(info["helpers"], {'os': 0, 'rank': 1})
            user_data[info["helpers"]]['os'] += 10

        await interaction.response.send_message("‚úÖ –ö–æ–Ω—Ç—Ä–∞–∫—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω. –û–° –Ω–∞—á–∏—Å–ª–µ–Ω—ã.")
        await interaction.message.edit(content="–ö–æ–Ω—Ç—Ä–∞–∫—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω –ü–∞–Ω—Ç–µ–æ–Ω–æ–º.", view=None)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–≤—ã—à–µ–Ω–∏–µ
        executor = bot.get_user(info["executor"])
        log_channel = bot.get_channel(LOG_CHANNEL_ID)
        if user_data[info["executor"]]['os'] >= user_data[info["executor"]]['rank'] * 100:
            await log_channel.send(
                f"üß¨ {executor.mention} –¥–æ—Å—Ç–∏–≥ –ª–∏–º–∏—Ç–∞ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è (–†–∞–Ω–≥ {rank_now} ‚Üí {rank_next}).\n"
    f"<@&{PANTEON_ROLE_ID}>, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é –ø–æ–≤—ã—à–µ–Ω–∏–µ."
            )

    @discord.ui.button(label="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", style=discord.ButtonStyle.danger)
    async def reject(self, interaction: discord.Interaction, button: discord.ui.Button):
        pending_confirmations.pop(interaction.message.id, None)
        await interaction.message.edit(content="üö´ –ö–æ–Ω—Ç—Ä–∞–∫—Ç –æ—Ç–∫–ª–æ–Ω—ë–Ω –ü–∞–Ω—Ç–µ–æ–Ω–æ–º.", view=None)
        await interaction.response.send_message("–û—Ç–∫–ª–æ–Ω–µ–Ω–æ.")


@bot.event
async def on_member_join(member):
    channel = bot.get_channel(1324369135466975287)
    if not channel:
        return

    import random
    phrases = [
        "–ú–∏—Ä –º–µ–Ω—è–µ—Ç—Å—è. –ü—Ä–∏—Å–ª—É—à–∞–π—Å—è –∫ —Ç–∏—à–∏–Ω–µ.",
        "–°–∏–ª–∞ –Ω–µ –ø—Ä–æ—Å–∏—Ç –ø–æ–∑–≤–æ–ª–µ–Ω–∏—è. –û–Ω–∞ –ø—Ä–æ—Å—Ç–æ –±–µ—Ä—ë—Ç.",
        "–û–Ω–∏ –±–æ—è—Ç—Å—è –ø—Ä–∞–≤–¥—ã. –ê —Ç—ã?",
        "–í—ã–±–æ—Ä —Å–¥–µ–ª–∞–Ω. –ù–∞–∑–∞–¥ –ø—É—Ç–∏ –Ω–µ—Ç.",
        "–¢–µ, –∫—Ç–æ –≤–∏–¥—è—Ç –¥–∞–ª—å—à–µ, –∏–¥—É—Ç –ø–µ—Ä–≤—ã–º–∏.",
        "–ù–µ –∑–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å–æ–≤ ‚Äî –∑–Ω–∞–π —Å–≤–æ—ë –º–µ—Å—Ç–æ.",
        "–ú–æ–ª—á–∏. –ù–∞–±–ª—é–¥–∞–π. –í–æ–∑–¥–µ–π—Å—Ç–≤—É–π.",
        "–í–µ—Ä–∞ ‚Äî –æ—Ä—É–∂–∏–µ —Å–∏–ª—å–Ω—ã—Ö.",
        "–¢–æ—Ç, –∫—Ç–æ –∂–∞–∂–¥–µ—Ç –ø–æ—Ä—è–¥–∫–∞, –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≥–æ—Ç–æ–≤ –∫ —Ö–∞–æ—Å—É.",
        "–¢—ã –≤—Å—Ç—É–ø–∏–ª —Ç—É–¥–∞, –≥–¥–µ —Å–ª—É–∂–∞—Ç –±–µ–∑ —Å–ª–æ–≤."
    ]
    phrase = random.choice(phrases)
    embed = discord.Embed(
        description=f"{member.mention}\n**{phrase}**",
        color=discord.Color.dark_gray()
    )
    embed.set_image(url="attachment://welcome.gif")
    await channel.send(file=discord.File("welcome.gif", filename="welcome.gif"), embed=embed)


bot.run(TOKEN)
